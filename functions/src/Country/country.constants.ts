export const CURRENT_YEAR = 2020;

export const API_ENDPOINT_ARGCIS =
  'https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/1/query?f=json&where=Confirmed%20%3E%200&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc%2CCountry_Region%20asc%2CProvince_State%20asc&resultOffset=0&resultRecordCount=250&cacheHint=true';

export const WEB_ENDPOINT_WORLDOMETERS =
  'https://www.worldometers.info/coronavirus/';

export const WEB_ENDPOINT_WORLDOMETERS_BY_COUNTRY = (country: string) =>
  `https://www.worldometers.info/coronavirus/country/${country}`;

export const COUNTRY_REF_KEY = 'country';
export const HISTORY_REF_KEY = 'history';

export const FLAG_REPLACE_REG = /republic|democratic| of |federation| the /gi;

export const WORLDOMETERS_HISTORY_ACTIVE_CASES_REG = /graph\-active\-cases\-total.+?categories: *(\[.+?\]).+?data: *(\[.+?\])/ms;
export const WORLDOMETERS_HISTORY_DEATHS_REG = /coronavirus\-deaths\-linear.+?categories: *(\[.+?\]).+?data: *(\[.+?\])/ms;
export const WORLDOMETERS_HISTORY_DAILY_RECOVERED_REG = /cases\-cured\-daily.+?categories: *(\[.+?\]).+?data: *(\[.+?\])/ms;

export const FLAGS = [
  'samoa',
  'kenya',
  'afghanistan',
  'russia',
  'guatemala',
  'bolivia',
  'stLucia',
  'ghana',
  'hungary',
  'democraticRepublicOfCongo',
  'ceuta',
  'iceland',
  'southSudan',
  'poland',
  'china',
  'argentina',
  'capeVerde',
  'kazakhstan',
  'guernsey',
  'venezuela',
  'liberia',
  'colombia',
  'britishIndianOceanTerritory',
  'iran',
  'namibia',
  'tanzania',
  'jamaica',
  'saudiArabia',
  'zambia',
  'cambodia',
  'tibet',
  'djibouti',
  'angola',
  'lesotho',
  'scotland',
  'sintMaarten',
  'tunisia',
  'ukraine',
  'guinea',
  'alandIslands',
  'estonia',
  'faroeIslands',
  'laos',
  'kyrgyzstan',
  'tajikistan',
  'cuba',
  'kosovo',
  'cocosIsland',
  'greenland',
  'algeria',
  'unitedNations',
  'curacao',
  'aruba',
  'somaliland',
  'rwanda',
  'cookIslands',
  'honduras',
  'armenia',
  'kiribati',
  'niue',
  'britishVirginIslands',
  'southKorea',
  'taiwan',
  'virginIslands',
  'guam',
  'eastTimor',
  'puertoRico',
  'rapaNui',
  'republicOfTheCongo',
  'turkey',
  'monaco',
  'northernMarianasIslands',
  'frenchPolynesia',
  'australia',
  'sierraLeone',
  'cameroon',
  'nepal',
  'uzbekistn',
  'balearicIslands',
  'england',
  'gibraltar',
  'isleOfMan',
  'czechRepublic',
  'sweden',
  'burundi',
  'seychelles',
  'moldova',
  'belgium',
  'pitcairnIslands',
  'brazil',
  'mozambique',
  'benin',
  'greece',
  'andorra',
  'britishColumbia',
  'ecuador',
  'cyprus',
  'gabon',
  'libya',
  'sicily',
  'syria',
  'burkinaFaso',
  'sahrawiArabDemocraticRepublic',
  'marshallIsland',
  'tonga',
  'montserrat',
  'sintEustatius',
  'christmasIsland',
  'montenegro',
  'bermuda',
  'otan',
  'grenada',
  'madagascar',
  'northKorea',
  'senegal',
  'oman',
  'malaysia',
  'papuaNewGuinea',
  'comoros',
  'panama',
  'costaRica',
  'switzerland',
  'corsica',
  'equatorialGuinea',
  'saintKittsAndNevis',
  'nigeria',
  'trinidadAndTobago',
  'canaryIslands',
  'dominicanRepublic',
  'melilla',
  'transnistria',
  'azoresIslands',
  'bosniaAndHerzegovina',
  'micronesia',
  'anguilla',
  'republicOfMacedonia',
  'canada',
  'caymanIslands',
  'unitedKingdom',
  'yemen',
  'gambia',
  'madeira',
  'togo',
  'tokelau',
  'pakistan',
  'hongKong',
  'solomonIslands',
  'bulgaria',
  'mauritania',
  'qatar',
  'azerbaijan',
  'germany',
  'bhutan',
  'unitedArabEmirates',
  'maldives',
  'somalia',
  'galapagosIslands',
  'antiguaAndBarbuda',
  'austria',
  'uganda',
  'guineaBissau',
  'orkneyIslands',
  'sudan',
  'macao',
  'latvia',
  'israel',
  'haiti',
  'turkmenistan',
  'nicaragua',
  'southAfrica',
  'martinique',
  'myanmar',
  'portugal',
  'mauritius',
  'centralAfricanRepublic',
  'sabaIsland',
  'spain',
  'basqueCountry',
  'luxembourg',
  'bahrain',
  'mongolia',
  'americanSamoa',
  'tubalu',
  'suriname',
  'mali',
  'serbia',
  'bangladesh',
  'dominica',
  'sanMarino',
  'france',
  'thailand',
  'kuwait',
  'zimbabwe',
  'italy',
  'ossetia',
  'newZealand',
  'brunei',
  'liechtenstein',
  'northenCyprus',
  'falklandIslands',
  'jersey',
  'ivoryCoast',
  'chad',
  'eritrea',
  'palau',
  'denmark',
  'belarus',
  'barbados',
  'philippines',
  'albania',
  'singapore',
  'lebanon',
  'india',
  'scrip',
  'peru',
  'ethiopia',
  'netherlands',
  'georgia',
  'bahamas',
  'swaziland',
  'palestine',
  'iraq',
  'bonaire',
  'norfolkIsland',
  'turksAndCaicos',
  'sriLanka',
  'vanuatu',
  'croatia',
  'malawi',
  'hawaii',
  'vaticanCity',
  'jordan',
  'fiji',
  'egypt',
  'stBarts',
  'niger',
  'wales',
  'japan',
  'vietnam',
  'saoTomeAndPrincipe',
  'unitedStatesOfAmerica',
  'malta',
  'uruguay',
  'ireland',
  'finland',
  'europeanUnion',
  'stVincentAndTheGrenadines',
  'romania',
  'lithuania',
  'slovenia',
  'slovakia',
  'nauru',
  'indonesia',
  'chile',
  'mexico',
  'sardinia',
  'elSalvador',
  'norway',
  'botswana',
  'morocco',
  'belize',
].reduce<Array<{name: string; value: string}>>((acc, value) => {
  const pieces = value.replace(/[A-Z]/, c => `-${c.toLowerCase()}`).split('-');
  const formattedName = value.replace(FLAG_REPLACE_REG, '');
  const abbreviation = pieces.length > 1 && pieces.map(p => p[0]).join('');
  const begin = abbreviation ? [{name: abbreviation, value}] : [];
  return [...begin, ...acc, {name: formattedName, value}];
}, []);
